# Clang-format configuration for UESynth C++ code
# Based on Unreal Engine coding standards and best practices

# Base style
BasedOnStyle: LLVM

# Language settings
Language: Cpp
Standard: Cpp17

# Indentation
IndentWidth: 2
TabWidth: 2
UseTab: Never
ContinuationIndentWidth: 4
IndentCaseLabels: true
IndentGotoLabels: true
IndentPPDirectives: BeforeHash
IndentWrappedFunctionNames: false
IndentAccessModifiers: false
AccessModifierOffset: -2

# Line length and breaking
ColumnLimit: 100
BreakBeforeBraces: Attach
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: true
CompactNamespaces: false

# Alignment
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: false
AlignEscapedNewlines: Right
AlignOperands: true
AlignTrailingComments: true

# Spacing
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Function and class formatting
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortBlocksOnASingleLine: Empty
AllowAllParametersOfDeclarationOnNextLine: true
AllowAllArgumentsOnNextLine: true
BinPackArguments: true
BinPackParameters: true

# Pointer and reference alignment (UE style)
PointerAlignment: Left
ReferenceAlignment: Left

# Include sorting and grouping
SortIncludes: true
IncludeBlocks: Regroup
IncludeCategories:
  # UE Core headers first
  - Regex: '^"(CoreMinimal|Engine|UnrealEngine)\.h"'
    Priority: 1
  # UE module headers
  - Regex: '^"[A-Z][a-zA-Z0-9]*\.h"'
    Priority: 2
  # Project headers
  - Regex: '^".*\.h"'
    Priority: 3
  # UE system headers
  - Regex: '^<(Engine|Core|UObject|Slate|EditorStyle|ToolMenus|Framework)/'
    Priority: 4
  # Third-party headers
  - Regex: '^<(grpc|google|absl)/'
    Priority: 5
  # Standard library headers
  - Regex: '^<[a-z_]+>'
    Priority: 6
  # System headers
  - Regex: '^<.*>'
    Priority: 7

# Macro and preprocessor formatting
IndentPPDirectives: BeforeHash
MacroBlockBegin: ''
MacroBlockEnd: ''

# Comment formatting
ReflowComments: true
CommentPragmas: '^ IWYU pragma:'

# Namespace formatting
NamespaceIndentation: None
CompactNamespaces: false

# Constructor initializer formatting
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 4

# Template formatting
AlwaysBreakTemplateDeclarations: MultiLine

# Penalty settings for line breaking decisions
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200

# Other formatting options
KeepEmptyLinesAtTheStartOfBlocks: true
MaxEmptyLinesToKeep: 2
DerivePointerAlignment: false
DisableFormat: false
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
  - UCLASS
  - USTRUCT
  - UENUM
  - UFUNCTION
  - UPROPERTY
  - GENERATED_BODY
  - GENERATED_UCLASS_BODY