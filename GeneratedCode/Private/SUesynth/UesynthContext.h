//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SUesynth/UesynthMessage.h"
#include "SUesynth/UesynthMarshaling.h"
class GrpcContext_UESynthService_ControlStream : public GrpcContext_Stream_Stream<UESynthService_ControlStream_ReaderWriter, ::uesynth::FrameResponse, ::uesynth::ActionRequest>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Stream_Stream<UESynthService_ControlStream_ReaderWriter, ::uesynth::FrameResponse, ::uesynth::ActionRequest> Super;

private:
	void Init();
	void Call(const FGrpcUesynthActionRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_ControlStream(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_SetCameraTransform : public GrpcContext_Ping_Pong<UESynthService_SetCameraTransform_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_SetCameraTransform_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthSetCameraTransformRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_SetCameraTransform(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_GetCameraTransform : public GrpcContext_Ping_Pong<UESynthService_GetCameraTransform_ReaderWriter, ::uesynth::GetCameraTransformResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_GetCameraTransform_ReaderWriter, ::uesynth::GetCameraTransformResponse> Super;

private:
	void Call(const FGrpcUesynthGetCameraTransformRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_GetCameraTransform(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_CaptureRgbImage : public GrpcContext_Ping_Pong<UESynthService_CaptureRgbImage_ReaderWriter, ::uesynth::ImageResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_CaptureRgbImage_ReaderWriter, ::uesynth::ImageResponse> Super;

private:
	void Call(const FGrpcUesynthCaptureRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_CaptureRgbImage(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_CaptureDepthMap : public GrpcContext_Ping_Pong<UESynthService_CaptureDepthMap_ReaderWriter, ::uesynth::ImageResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_CaptureDepthMap_ReaderWriter, ::uesynth::ImageResponse> Super;

private:
	void Call(const FGrpcUesynthCaptureRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_CaptureDepthMap(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_CaptureSegmentationMask : public GrpcContext_Ping_Pong<UESynthService_CaptureSegmentationMask_ReaderWriter, ::uesynth::ImageResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_CaptureSegmentationMask_ReaderWriter, ::uesynth::ImageResponse> Super;

private:
	void Call(const FGrpcUesynthCaptureRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_CaptureSegmentationMask(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_SetObjectTransform : public GrpcContext_Ping_Pong<UESynthService_SetObjectTransform_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_SetObjectTransform_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthSetObjectTransformRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_SetObjectTransform(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_GetObjectTransform : public GrpcContext_Ping_Pong<UESynthService_GetObjectTransform_ReaderWriter, ::uesynth::GetObjectTransformResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_GetObjectTransform_ReaderWriter, ::uesynth::GetObjectTransformResponse> Super;

private:
	void Call(const FGrpcUesynthGetObjectTransformRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_GetObjectTransform(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_CreateCamera : public GrpcContext_Ping_Pong<UESynthService_CreateCamera_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_CreateCamera_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthCreateCameraRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_CreateCamera(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_DestroyCamera : public GrpcContext_Ping_Pong<UESynthService_DestroyCamera_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_DestroyCamera_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthDestroyCameraRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_DestroyCamera(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_SetResolution : public GrpcContext_Ping_Pong<UESynthService_SetResolution_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_SetResolution_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthSetResolutionRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_SetResolution(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_CaptureNormals : public GrpcContext_Ping_Pong<UESynthService_CaptureNormals_ReaderWriter, ::uesynth::ImageResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_CaptureNormals_ReaderWriter, ::uesynth::ImageResponse> Super;

private:
	void Call(const FGrpcUesynthCaptureRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_CaptureNormals(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_CaptureOpticalFlow : public GrpcContext_Ping_Pong<UESynthService_CaptureOpticalFlow_ReaderWriter, ::uesynth::ImageResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_CaptureOpticalFlow_ReaderWriter, ::uesynth::ImageResponse> Super;

private:
	void Call(const FGrpcUesynthCaptureRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_CaptureOpticalFlow(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_SpawnObject : public GrpcContext_Ping_Pong<UESynthService_SpawnObject_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_SpawnObject_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthSpawnObjectRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_SpawnObject(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_DestroyObject : public GrpcContext_Ping_Pong<UESynthService_DestroyObject_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_DestroyObject_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthDestroyObjectRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_DestroyObject(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_SetMaterial : public GrpcContext_Ping_Pong<UESynthService_SetMaterial_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_SetMaterial_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthSetMaterialRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_SetMaterial(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_ListObjects : public GrpcContext_Ping_Pong<UESynthService_ListObjects_ReaderWriter, ::uesynth::ListObjectsResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_ListObjects_ReaderWriter, ::uesynth::ListObjectsResponse> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_ListObjects(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_UESynthService_SetLighting : public GrpcContext_Ping_Pong<UESynthService_SetLighting_ReaderWriter, ::uesynth::CommandResponse>
{
	friend class UUESynthServiceClient;
	typedef GrpcContext_Ping_Pong<UESynthService_SetLighting_ReaderWriter, ::uesynth::CommandResponse> Super;

private:
	void Call(const FGrpcUesynthSetLightingRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_UESynthService_SetLighting(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

