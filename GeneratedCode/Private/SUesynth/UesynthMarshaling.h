//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "SUesynth/UesynthMessage.h"
#include "TurboLinkGrpcContext.h"
#include "uesynth.grpc.pb.h"

void GRPC_TO_TURBOLINK(const ::uesynth::ActionRequest* in, FGrpcUesynthActionRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthActionRequest* in, ::uesynth::ActionRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::FrameResponse* in, FGrpcUesynthFrameResponse* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthFrameResponse* in, ::uesynth::FrameResponse* out);

void GRPC_TO_TURBOLINK(const ::uesynth::Vector3* in, FGrpcUesynthVector3* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthVector3* in, ::uesynth::Vector3* out);

void GRPC_TO_TURBOLINK(const ::uesynth::Rotator* in, FGrpcUesynthRotator* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthRotator* in, ::uesynth::Rotator* out);

void GRPC_TO_TURBOLINK(const ::uesynth::Transform* in, FGrpcUesynthTransform* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthTransform* in, ::uesynth::Transform* out);

void GRPC_TO_TURBOLINK(const ::uesynth::CommandResponse* in, FGrpcUesynthCommandResponse* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthCommandResponse* in, ::uesynth::CommandResponse* out);

void GRPC_TO_TURBOLINK(const ::uesynth::SetCameraTransformRequest* in, FGrpcUesynthSetCameraTransformRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthSetCameraTransformRequest* in, ::uesynth::SetCameraTransformRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::GetCameraTransformRequest* in, FGrpcUesynthGetCameraTransformRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthGetCameraTransformRequest* in, ::uesynth::GetCameraTransformRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::GetCameraTransformResponse* in, FGrpcUesynthGetCameraTransformResponse* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthGetCameraTransformResponse* in, ::uesynth::GetCameraTransformResponse* out);

void GRPC_TO_TURBOLINK(const ::uesynth::CaptureRequest* in, FGrpcUesynthCaptureRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthCaptureRequest* in, ::uesynth::CaptureRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::ImageResponse* in, FGrpcUesynthImageResponse* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthImageResponse* in, ::uesynth::ImageResponse* out);

void GRPC_TO_TURBOLINK(const ::uesynth::SetObjectTransformRequest* in, FGrpcUesynthSetObjectTransformRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthSetObjectTransformRequest* in, ::uesynth::SetObjectTransformRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::GetObjectTransformRequest* in, FGrpcUesynthGetObjectTransformRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthGetObjectTransformRequest* in, ::uesynth::GetObjectTransformRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::GetObjectTransformResponse* in, FGrpcUesynthGetObjectTransformResponse* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthGetObjectTransformResponse* in, ::uesynth::GetObjectTransformResponse* out);

void GRPC_TO_TURBOLINK(const ::uesynth::CreateCameraRequest* in, FGrpcUesynthCreateCameraRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthCreateCameraRequest* in, ::uesynth::CreateCameraRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::DestroyCameraRequest* in, FGrpcUesynthDestroyCameraRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthDestroyCameraRequest* in, ::uesynth::DestroyCameraRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::SetResolutionRequest* in, FGrpcUesynthSetResolutionRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthSetResolutionRequest* in, ::uesynth::SetResolutionRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::ListObjectsResponse* in, FGrpcUesynthListObjectsResponse* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthListObjectsResponse* in, ::uesynth::ListObjectsResponse* out);

void GRPC_TO_TURBOLINK(const ::uesynth::SpawnObjectRequest* in, FGrpcUesynthSpawnObjectRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthSpawnObjectRequest* in, ::uesynth::SpawnObjectRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::DestroyObjectRequest* in, FGrpcUesynthDestroyObjectRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthDestroyObjectRequest* in, ::uesynth::DestroyObjectRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::SetMaterialRequest* in, FGrpcUesynthSetMaterialRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthSetMaterialRequest* in, ::uesynth::SetMaterialRequest* out);

void GRPC_TO_TURBOLINK(const ::uesynth::SetLightingRequest* in, FGrpcUesynthSetLightingRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcUesynthSetLightingRequest* in, ::uesynth::SetLightingRequest* out);

typedef grpc::ClientAsyncReaderWriter<::uesynth::ActionRequest, ::uesynth::FrameResponse> UESynthService_ControlStream_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_SetCameraTransform_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::GetCameraTransformResponse> UESynthService_GetCameraTransform_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::ImageResponse> UESynthService_CaptureRgbImage_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::ImageResponse> UESynthService_CaptureDepthMap_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::ImageResponse> UESynthService_CaptureSegmentationMask_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_SetObjectTransform_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::GetObjectTransformResponse> UESynthService_GetObjectTransform_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_CreateCamera_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_DestroyCamera_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_SetResolution_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::ImageResponse> UESynthService_CaptureNormals_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::ImageResponse> UESynthService_CaptureOpticalFlow_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_SpawnObject_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_DestroyObject_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_SetMaterial_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::ListObjectsResponse> UESynthService_ListObjects_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::uesynth::CommandResponse> UESynthService_SetLighting_ReaderWriter;
