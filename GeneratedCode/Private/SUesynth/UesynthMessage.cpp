//Generated by TurboLink CodeGenerator, do not edit!
#include "SUesynth/UesynthMessage.h"
#include "SUesynth/UesynthMarshaling.h"
#include "google/protobuf/util/json_util.h"

DEFINE_JSON_FUNCTIONS(FGrpcUesynthActionRequest, ::uesynth::ActionRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthFrameResponse, ::uesynth::FrameResponse)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthVector3, ::uesynth::Vector3)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthRotator, ::uesynth::Rotator)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthTransform, ::uesynth::Transform)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthCommandResponse, ::uesynth::CommandResponse)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthSetCameraTransformRequest, ::uesynth::SetCameraTransformRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthGetCameraTransformRequest, ::uesynth::GetCameraTransformRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthGetCameraTransformResponse, ::uesynth::GetCameraTransformResponse)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthCaptureRequest, ::uesynth::CaptureRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthImageResponse, ::uesynth::ImageResponse)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthSetObjectTransformRequest, ::uesynth::SetObjectTransformRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthGetObjectTransformRequest, ::uesynth::GetObjectTransformRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthGetObjectTransformResponse, ::uesynth::GetObjectTransformResponse)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthCreateCameraRequest, ::uesynth::CreateCameraRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthDestroyCameraRequest, ::uesynth::DestroyCameraRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthSetResolutionRequest, ::uesynth::SetResolutionRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthListObjectsResponse, ::uesynth::ListObjectsResponse)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthSpawnObjectRequest, ::uesynth::SpawnObjectRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthDestroyObjectRequest, ::uesynth::DestroyObjectRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthSetMaterialRequest, ::uesynth::SetMaterialRequest)
DEFINE_JSON_FUNCTIONS(FGrpcUesynthSetLightingRequest, ::uesynth::SetLightingRequest)

FGrpcUesynthActionRequestAction UGrpcUesynthActionRequestActionHelperLibrary::MakeAction(EGrpcUesynthActionRequestAction ActionCase, 
    FGrpcUesynthSetCameraTransformRequest SetCameraTransform, FGrpcUesynthGetCameraTransformRequest GetCameraTransform, FGrpcUesynthCaptureRequest CaptureRgb, 
    FGrpcUesynthCaptureRequest CaptureDepth, FGrpcUesynthCaptureRequest CaptureSegmentation, FGrpcUesynthCaptureRequest CaptureNormals, 
    FGrpcUesynthCaptureRequest CaptureOpticalFlow, FGrpcUesynthSetObjectTransformRequest SetObjectTransform, FGrpcUesynthGetObjectTransformRequest GetObjectTransform, 
    FGrpcUesynthCreateCameraRequest CreateCamera, FGrpcUesynthDestroyCameraRequest DestroyCamera, FGrpcUesynthSetResolutionRequest SetResolution, 
    FGrpcUesynthSpawnObjectRequest SpawnObject, FGrpcUesynthDestroyObjectRequest DestroyObject, FGrpcUesynthSetMaterialRequest SetMaterial, 
    FGrpcGoogleProtobufEmpty ListObjects, FGrpcUesynthSetLightingRequest SetLighting 
)
{
    FGrpcUesynthActionRequestAction Action;
    Action.ActionCase = ActionCase;
    Action.SetCameraTransform = MakeShareable(new FGrpcUesynthSetCameraTransformRequest(SetCameraTransform));
    Action.GetCameraTransform = MakeShareable(new FGrpcUesynthGetCameraTransformRequest(GetCameraTransform));
    Action.CaptureRgb = MakeShareable(new FGrpcUesynthCaptureRequest(CaptureRgb));
    Action.CaptureDepth = MakeShareable(new FGrpcUesynthCaptureRequest(CaptureDepth));
    Action.CaptureSegmentation = MakeShareable(new FGrpcUesynthCaptureRequest(CaptureSegmentation));
    Action.CaptureNormals = MakeShareable(new FGrpcUesynthCaptureRequest(CaptureNormals));
    Action.CaptureOpticalFlow = MakeShareable(new FGrpcUesynthCaptureRequest(CaptureOpticalFlow));
    Action.SetObjectTransform = MakeShareable(new FGrpcUesynthSetObjectTransformRequest(SetObjectTransform));
    Action.GetObjectTransform = MakeShareable(new FGrpcUesynthGetObjectTransformRequest(GetObjectTransform));
    Action.CreateCamera = MakeShareable(new FGrpcUesynthCreateCameraRequest(CreateCamera));
    Action.DestroyCamera = MakeShareable(new FGrpcUesynthDestroyCameraRequest(DestroyCamera));
    Action.SetResolution = MakeShareable(new FGrpcUesynthSetResolutionRequest(SetResolution));
    Action.SpawnObject = MakeShareable(new FGrpcUesynthSpawnObjectRequest(SpawnObject));
    Action.DestroyObject = MakeShareable(new FGrpcUesynthDestroyObjectRequest(DestroyObject));
    Action.SetMaterial = MakeShareable(new FGrpcUesynthSetMaterialRequest(SetMaterial));
    Action.ListObjects = ListObjects;
    Action.SetLighting = MakeShareable(new FGrpcUesynthSetLightingRequest(SetLighting));

    return Action;
}

void UGrpcUesynthActionRequestActionHelperLibrary::BreakAction(const FGrpcUesynthActionRequestAction& Action, EGrpcUesynthActionRequestAction& ActionCase, 
    FGrpcUesynthSetCameraTransformRequest& SetCameraTransform, FGrpcUesynthGetCameraTransformRequest& GetCameraTransform, FGrpcUesynthCaptureRequest& CaptureRgb, 
    FGrpcUesynthCaptureRequest& CaptureDepth, FGrpcUesynthCaptureRequest& CaptureSegmentation, FGrpcUesynthCaptureRequest& CaptureNormals, 
    FGrpcUesynthCaptureRequest& CaptureOpticalFlow, FGrpcUesynthSetObjectTransformRequest& SetObjectTransform, FGrpcUesynthGetObjectTransformRequest& GetObjectTransform, 
    FGrpcUesynthCreateCameraRequest& CreateCamera, FGrpcUesynthDestroyCameraRequest& DestroyCamera, FGrpcUesynthSetResolutionRequest& SetResolution, 
    FGrpcUesynthSpawnObjectRequest& SpawnObject, FGrpcUesynthDestroyObjectRequest& DestroyObject, FGrpcUesynthSetMaterialRequest& SetMaterial, 
    FGrpcGoogleProtobufEmpty& ListObjects, FGrpcUesynthSetLightingRequest& SetLighting 
)
{
    ActionCase = Action.ActionCase;
    if(Action.SetCameraTransform.Get()) 
    {
        SetCameraTransform = *(Action.SetCameraTransform.Get());
    }
    if(Action.GetCameraTransform.Get()) 
    {
        GetCameraTransform = *(Action.GetCameraTransform.Get());
    }
    if(Action.CaptureRgb.Get()) 
    {
        CaptureRgb = *(Action.CaptureRgb.Get());
    }
    if(Action.CaptureDepth.Get()) 
    {
        CaptureDepth = *(Action.CaptureDepth.Get());
    }
    if(Action.CaptureSegmentation.Get()) 
    {
        CaptureSegmentation = *(Action.CaptureSegmentation.Get());
    }
    if(Action.CaptureNormals.Get()) 
    {
        CaptureNormals = *(Action.CaptureNormals.Get());
    }
    if(Action.CaptureOpticalFlow.Get()) 
    {
        CaptureOpticalFlow = *(Action.CaptureOpticalFlow.Get());
    }
    if(Action.SetObjectTransform.Get()) 
    {
        SetObjectTransform = *(Action.SetObjectTransform.Get());
    }
    if(Action.GetObjectTransform.Get()) 
    {
        GetObjectTransform = *(Action.GetObjectTransform.Get());
    }
    if(Action.CreateCamera.Get()) 
    {
        CreateCamera = *(Action.CreateCamera.Get());
    }
    if(Action.DestroyCamera.Get()) 
    {
        DestroyCamera = *(Action.DestroyCamera.Get());
    }
    if(Action.SetResolution.Get()) 
    {
        SetResolution = *(Action.SetResolution.Get());
    }
    if(Action.SpawnObject.Get()) 
    {
        SpawnObject = *(Action.SpawnObject.Get());
    }
    if(Action.DestroyObject.Get()) 
    {
        DestroyObject = *(Action.DestroyObject.Get());
    }
    if(Action.SetMaterial.Get()) 
    {
        SetMaterial = *(Action.SetMaterial.Get());
    }
    ListObjects = Action.ListObjects;
    if(Action.SetLighting.Get()) 
    {
        SetLighting = *(Action.SetLighting.Get());
    }
}

FGrpcUesynthFrameResponseResponse UGrpcUesynthFrameResponseResponseHelperLibrary::MakeResponse(EGrpcUesynthFrameResponseResponse ResponseCase, 
    FGrpcUesynthCommandResponse CommandResponse, FGrpcUesynthGetCameraTransformResponse CameraTransform, FGrpcUesynthImageResponse ImageResponse, 
    FGrpcUesynthGetObjectTransformResponse ObjectTransform, FGrpcUesynthListObjectsResponse ObjectsList 
)
{
    FGrpcUesynthFrameResponseResponse Response;
    Response.ResponseCase = ResponseCase;
    Response.CommandResponse = MakeShareable(new FGrpcUesynthCommandResponse(CommandResponse));
    Response.CameraTransform = MakeShareable(new FGrpcUesynthGetCameraTransformResponse(CameraTransform));
    Response.ImageResponse = MakeShareable(new FGrpcUesynthImageResponse(ImageResponse));
    Response.ObjectTransform = MakeShareable(new FGrpcUesynthGetObjectTransformResponse(ObjectTransform));
    Response.ObjectsList = MakeShareable(new FGrpcUesynthListObjectsResponse(ObjectsList));

    return Response;
}

void UGrpcUesynthFrameResponseResponseHelperLibrary::BreakResponse(const FGrpcUesynthFrameResponseResponse& Response, EGrpcUesynthFrameResponseResponse& ResponseCase, 
    FGrpcUesynthCommandResponse& CommandResponse, FGrpcUesynthGetCameraTransformResponse& CameraTransform, FGrpcUesynthImageResponse& ImageResponse, 
    FGrpcUesynthGetObjectTransformResponse& ObjectTransform, FGrpcUesynthListObjectsResponse& ObjectsList 
)
{
    ResponseCase = Response.ResponseCase;
    if(Response.CommandResponse.Get()) 
    {
        CommandResponse = *(Response.CommandResponse.Get());
    }
    if(Response.CameraTransform.Get()) 
    {
        CameraTransform = *(Response.CameraTransform.Get());
    }
    if(Response.ImageResponse.Get()) 
    {
        ImageResponse = *(Response.ImageResponse.Get());
    }
    if(Response.ObjectTransform.Get()) 
    {
        ObjectTransform = *(Response.ObjectTransform.Get());
    }
    if(Response.ObjectsList.Get()) 
    {
        ObjectsList = *(Response.ObjectsList.Get());
    }
}

