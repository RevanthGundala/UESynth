# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import uesynth_pb2 as uesynth__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in uesynth_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UESynthServiceStub(object):
    """Service definition for UESynth
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ControlStream = channel.stream_stream(
                '/uesynth.UESynthService/ControlStream',
                request_serializer=uesynth__pb2.ActionRequest.SerializeToString,
                response_deserializer=uesynth__pb2.FrameResponse.FromString,
                _registered_method=True)
        self.SetCameraTransform = channel.unary_unary(
                '/uesynth.UESynthService/SetCameraTransform',
                request_serializer=uesynth__pb2.SetCameraTransformRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.GetCameraTransform = channel.unary_unary(
                '/uesynth.UESynthService/GetCameraTransform',
                request_serializer=uesynth__pb2.GetCameraTransformRequest.SerializeToString,
                response_deserializer=uesynth__pb2.GetCameraTransformResponse.FromString,
                _registered_method=True)
        self.CaptureRgbImage = channel.unary_unary(
                '/uesynth.UESynthService/CaptureRgbImage',
                request_serializer=uesynth__pb2.CaptureRequest.SerializeToString,
                response_deserializer=uesynth__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.CaptureDepthMap = channel.unary_unary(
                '/uesynth.UESynthService/CaptureDepthMap',
                request_serializer=uesynth__pb2.CaptureRequest.SerializeToString,
                response_deserializer=uesynth__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.CaptureSegmentationMask = channel.unary_unary(
                '/uesynth.UESynthService/CaptureSegmentationMask',
                request_serializer=uesynth__pb2.CaptureRequest.SerializeToString,
                response_deserializer=uesynth__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.SetObjectTransform = channel.unary_unary(
                '/uesynth.UESynthService/SetObjectTransform',
                request_serializer=uesynth__pb2.SetObjectTransformRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.GetObjectTransform = channel.unary_unary(
                '/uesynth.UESynthService/GetObjectTransform',
                request_serializer=uesynth__pb2.GetObjectTransformRequest.SerializeToString,
                response_deserializer=uesynth__pb2.GetObjectTransformResponse.FromString,
                _registered_method=True)
        self.CreateCamera = channel.unary_unary(
                '/uesynth.UESynthService/CreateCamera',
                request_serializer=uesynth__pb2.CreateCameraRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.DestroyCamera = channel.unary_unary(
                '/uesynth.UESynthService/DestroyCamera',
                request_serializer=uesynth__pb2.DestroyCameraRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.SetResolution = channel.unary_unary(
                '/uesynth.UESynthService/SetResolution',
                request_serializer=uesynth__pb2.SetResolutionRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.CaptureNormals = channel.unary_unary(
                '/uesynth.UESynthService/CaptureNormals',
                request_serializer=uesynth__pb2.CaptureRequest.SerializeToString,
                response_deserializer=uesynth__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.CaptureOpticalFlow = channel.unary_unary(
                '/uesynth.UESynthService/CaptureOpticalFlow',
                request_serializer=uesynth__pb2.CaptureRequest.SerializeToString,
                response_deserializer=uesynth__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.SpawnObject = channel.unary_unary(
                '/uesynth.UESynthService/SpawnObject',
                request_serializer=uesynth__pb2.SpawnObjectRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.DestroyObject = channel.unary_unary(
                '/uesynth.UESynthService/DestroyObject',
                request_serializer=uesynth__pb2.DestroyObjectRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.SetMaterial = channel.unary_unary(
                '/uesynth.UESynthService/SetMaterial',
                request_serializer=uesynth__pb2.SetMaterialRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.ListObjects = channel.unary_unary(
                '/uesynth.UESynthService/ListObjects',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=uesynth__pb2.ListObjectsResponse.FromString,
                _registered_method=True)
        self.SetLighting = channel.unary_unary(
                '/uesynth.UESynthService/SetLighting',
                request_serializer=uesynth__pb2.SetLightingRequest.SerializeToString,
                response_deserializer=uesynth__pb2.CommandResponse.FromString,
                _registered_method=True)


class UESynthServiceServicer(object):
    """Service definition for UESynth
    """

    def ControlStream(self, request_iterator, context):
        """Bidirectional streaming method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCameraTransform(self, request, context):
        """Unary methods

        Camera and Viewport Control
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraTransform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CaptureRgbImage(self, request, context):
        """Data Capture
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CaptureDepthMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CaptureSegmentationMask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetObjectTransform(self, request, context):
        """Object Manipulation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObjectTransform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCamera(self, request, context):
        """Additional Camera Control
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyCamera(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetResolution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CaptureNormals(self, request, context):
        """Additional Data Capture
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CaptureOpticalFlow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpawnObject(self, request, context):
        """Additional Object Manipulation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMaterial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListObjects(self, request, context):
        """Scene Control
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLighting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UESynthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ControlStream': grpc.stream_stream_rpc_method_handler(
                    servicer.ControlStream,
                    request_deserializer=uesynth__pb2.ActionRequest.FromString,
                    response_serializer=uesynth__pb2.FrameResponse.SerializeToString,
            ),
            'SetCameraTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCameraTransform,
                    request_deserializer=uesynth__pb2.SetCameraTransformRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'GetCameraTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraTransform,
                    request_deserializer=uesynth__pb2.GetCameraTransformRequest.FromString,
                    response_serializer=uesynth__pb2.GetCameraTransformResponse.SerializeToString,
            ),
            'CaptureRgbImage': grpc.unary_unary_rpc_method_handler(
                    servicer.CaptureRgbImage,
                    request_deserializer=uesynth__pb2.CaptureRequest.FromString,
                    response_serializer=uesynth__pb2.ImageResponse.SerializeToString,
            ),
            'CaptureDepthMap': grpc.unary_unary_rpc_method_handler(
                    servicer.CaptureDepthMap,
                    request_deserializer=uesynth__pb2.CaptureRequest.FromString,
                    response_serializer=uesynth__pb2.ImageResponse.SerializeToString,
            ),
            'CaptureSegmentationMask': grpc.unary_unary_rpc_method_handler(
                    servicer.CaptureSegmentationMask,
                    request_deserializer=uesynth__pb2.CaptureRequest.FromString,
                    response_serializer=uesynth__pb2.ImageResponse.SerializeToString,
            ),
            'SetObjectTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.SetObjectTransform,
                    request_deserializer=uesynth__pb2.SetObjectTransformRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'GetObjectTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.GetObjectTransform,
                    request_deserializer=uesynth__pb2.GetObjectTransformRequest.FromString,
                    response_serializer=uesynth__pb2.GetObjectTransformResponse.SerializeToString,
            ),
            'CreateCamera': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCamera,
                    request_deserializer=uesynth__pb2.CreateCameraRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'DestroyCamera': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyCamera,
                    request_deserializer=uesynth__pb2.DestroyCameraRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'SetResolution': grpc.unary_unary_rpc_method_handler(
                    servicer.SetResolution,
                    request_deserializer=uesynth__pb2.SetResolutionRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'CaptureNormals': grpc.unary_unary_rpc_method_handler(
                    servicer.CaptureNormals,
                    request_deserializer=uesynth__pb2.CaptureRequest.FromString,
                    response_serializer=uesynth__pb2.ImageResponse.SerializeToString,
            ),
            'CaptureOpticalFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.CaptureOpticalFlow,
                    request_deserializer=uesynth__pb2.CaptureRequest.FromString,
                    response_serializer=uesynth__pb2.ImageResponse.SerializeToString,
            ),
            'SpawnObject': grpc.unary_unary_rpc_method_handler(
                    servicer.SpawnObject,
                    request_deserializer=uesynth__pb2.SpawnObjectRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'DestroyObject': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyObject,
                    request_deserializer=uesynth__pb2.DestroyObjectRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'SetMaterial': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMaterial,
                    request_deserializer=uesynth__pb2.SetMaterialRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
            'ListObjects': grpc.unary_unary_rpc_method_handler(
                    servicer.ListObjects,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=uesynth__pb2.ListObjectsResponse.SerializeToString,
            ),
            'SetLighting': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLighting,
                    request_deserializer=uesynth__pb2.SetLightingRequest.FromString,
                    response_serializer=uesynth__pb2.CommandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'uesynth.UESynthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('uesynth.UESynthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UESynthService(object):
    """Service definition for UESynth
    """

    @staticmethod
    def ControlStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/uesynth.UESynthService/ControlStream',
            uesynth__pb2.ActionRequest.SerializeToString,
            uesynth__pb2.FrameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCameraTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/SetCameraTransform',
            uesynth__pb2.SetCameraTransformRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCameraTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/GetCameraTransform',
            uesynth__pb2.GetCameraTransformRequest.SerializeToString,
            uesynth__pb2.GetCameraTransformResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CaptureRgbImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/CaptureRgbImage',
            uesynth__pb2.CaptureRequest.SerializeToString,
            uesynth__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CaptureDepthMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/CaptureDepthMap',
            uesynth__pb2.CaptureRequest.SerializeToString,
            uesynth__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CaptureSegmentationMask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/CaptureSegmentationMask',
            uesynth__pb2.CaptureRequest.SerializeToString,
            uesynth__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetObjectTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/SetObjectTransform',
            uesynth__pb2.SetObjectTransformRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetObjectTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/GetObjectTransform',
            uesynth__pb2.GetObjectTransformRequest.SerializeToString,
            uesynth__pb2.GetObjectTransformResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCamera(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/CreateCamera',
            uesynth__pb2.CreateCameraRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DestroyCamera(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/DestroyCamera',
            uesynth__pb2.DestroyCameraRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetResolution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/SetResolution',
            uesynth__pb2.SetResolutionRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CaptureNormals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/CaptureNormals',
            uesynth__pb2.CaptureRequest.SerializeToString,
            uesynth__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CaptureOpticalFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/CaptureOpticalFlow',
            uesynth__pb2.CaptureRequest.SerializeToString,
            uesynth__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpawnObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/SpawnObject',
            uesynth__pb2.SpawnObjectRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DestroyObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/DestroyObject',
            uesynth__pb2.DestroyObjectRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMaterial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/SetMaterial',
            uesynth__pb2.SetMaterialRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListObjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/ListObjects',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            uesynth__pb2.ListObjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLighting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/uesynth.UESynthService/SetLighting',
            uesynth__pb2.SetLightingRequest.SerializeToString,
            uesynth__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
